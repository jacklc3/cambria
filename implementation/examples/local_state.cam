with handler {
  return x  -> return (fun _ -> return x),
  get(a; k) -> return (fun s -> k (s a) s),
  set(x; k) -> return (fun s -> k () (fun a -> if a == fst x then snd x else s a)),
  ref(x; k) -> do a <- !new () in return (fun s ->
    k a (fun b -> if b == a then return x else s b)),
  finally s -> s (fun _ -> return ())
} handle (
  do a <- !ref true in
    do b <- !ref false in
      (!set (a, !get b); !get a)
)
